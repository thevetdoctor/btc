{"version":3,"sources":["components/header/Header.tsx","components/footer/Footer.tsx","components/row/Row.tsx","components/block/Detail.tsx","components/pagination/Pagination.tsx","components/board/Board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","Footer","Row","hash","time","height","rowClass","even","onClick","Detail","props","console","log","handleDisplay","size","block_index","prev_block","tx","length","Pagination","page","totalPages","handlePrevPage","handleNextPage","disabled","Board","useState","loading","setLoading","fetchedData","setFetchedData","setPage","pageData","setPageData","pageSize","setTotalPages","blockDetailsData","setBlockDetailsData","displayBlock","setDisplayBlock","setError","getBlockDetails","a","query","url","axios","method","headers","res","data","details","message","fetchData","blocks","cloned","higherLimit","lowerLimit","clonedData","slice","pages","Math","round","useEffect","splice","type","color","width","nextPage","map","block","idx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.795d2818.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FaBtc } from 'react-icons/fa';\r\nimport './header.css';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className='header'>\r\n            <span className='btc'>\r\n                <FaBtc />\r\n            </span>\r\n            <h3>\r\n                Nuri\r\n            </h3>\r\n            <span className='header-small'>\r\n                Get the best of both worlds!!!\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FaBtc } from 'react-icons/fa';\r\nimport './footer.css';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className='footer'>\r\n            <span>\r\n                <FaBtc />\r\n            </span>\r\n            Nuri Bank.... The game changer in financial freedom and opportunities\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {IBlock} from '../types';\r\nimport './row.css';\r\n\r\nexport default function Row({hash, time, height, rowClass, even, onClick}: IBlock) {\r\n    return (\r\n        <div \r\n            className={`row ${rowClass} ${!even ? 'even': ''}`}\r\n            onClick={onClick}\r\n        >\r\n            <span className='main-span'>\r\n                {hash}\r\n            </span>\r\n            <span className={`mini-span ${!rowClass && 'high'}`}>\r\n                {time}\r\n            </span>\r\n            <span className={`mini-span ${!rowClass && 'low'}`}>\r\n                {height}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport './detail.css';\r\n \r\nexport default function Detail(props: any): JSX.Element {\r\n\r\n    console.log('props', props);\r\n    return (\r\n        <div className='detail-banner'>\r\n            <div className='detail-top'>\r\n                <div className='detail-home'>\r\n                    <span \r\n                        className='close-btn' \r\n                        onClick={props.handleDisplay}>\r\n                            <IoCloseCircle size='2em' />\r\n                    </span>\r\n                    <h1 className='title-home'>\r\n                        \r\n                    </h1>\r\n                    <div className='details'>\r\n                        <span>\r\n                           SIZE (kB): {props.size}                        \r\n                        </span>\r\n                        <span>\r\n                            BLOCK INDEX: {props.block_index}\r\n                        </span>\r\n                        <span>\r\n                            PREVIOUS HASH: {props.prev_block}\r\n                        </span>\r\n                        <span>\r\n                            TRANSACTIONS: {props.tx?.length} transaction(s) found\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { IoCaretBack, IoCaretForwardSharp } from 'react-icons/io5'\r\nimport {IPagination} from '../types';\r\nimport './pagination.css';\r\n\r\nexport default function Pagination({page, totalPages, handlePrevPage, handleNextPage}: IPagination) {\r\n    // const {page, totalPages, handlePrevPage, handleNextPage} = props;\r\n    return ( \r\n        <div className='pagination'>\r\n            <button\r\n                className='btn prev'\r\n                onClick={handlePrevPage}\r\n                disabled={page <= 1}>\r\n                <IoCaretBack />\r\n            </button>\r\n            <span className='pageClick'>\r\n                page {page} of {totalPages}\r\n            </span>\r\n            <button\r\n                className='btn next'\r\n                onClick={handleNextPage}\r\n                disabled={page >= totalPages}\r\n            >\r\n                <IoCaretForwardSharp />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport Row from '../row/Row';\r\nimport Detail from '../block/Detail';\r\nimport { IBlock, IDetail } from '../types';\r\nimport Pagination from '../pagination/Pagination';\r\nimport './board.css';\r\n\r\nexport default function Board(props: any): JSX.Element {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [fetchedData, setFetchedData] = useState<IBlock[]>([]);\r\n  const [page, setPage] = useState<number>(1);\r\n  const [pageData, setPageData] = useState<IBlock[]>([]);\r\n  const [pageSize, setPageSize] = useState<number>(10);\r\n  const [totalPages, setTotalPages] = useState<number>(1);\r\n  const [blockDetailsData, setBlockDetailsData] = useState<any>(null);\r\n  const [displayBlock, setDisplayBlock] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const apiUrl = '';\r\n\r\n    const handlePrevPage = () => {\r\n      let nextPage = page;\r\n      console.log(page, 'prev');\r\n      nextPage = nextPage - 1;\r\n      setPage(nextPage);\r\n    }\r\n\r\n    const handleNextPage = () => {\r\n      let nextPage = page;\r\n      console.log(page, 'next');\r\n      nextPage = nextPage + 1;\r\n      setPage(nextPage);\r\n    }\r\n\r\n    const handleClick = (hash: string) => {\r\n      console.log('clicked');\r\n      getBlockDetails(hash);\r\n      setDisplayBlock(true);\r\n    };\r\n\r\n    const handleDisplay = () => {\r\n      setDisplayBlock(false);\r\n      setBlockDetailsData(null);\r\n    };\r\n\r\n    const getBlockDetails = async(hash: string) => {\r\n      setLoading(true);\r\n      if(!hash) {\r\n          return;\r\n        }\r\n\r\n        const query = `query={\r\n          details(hash: \"${hash}\"){\r\n            size\r\n            block_index\r\n            prev_block    \r\n            tx{\r\n              tx_index\r\n              inputs{\r\n                index\r\n              }\r\n              out{\r\n                spending_outpoints{\r\n                  tx_index\r\n                  n\r\n                }\r\n              }\r\n              lock_time\r\n              relayed_by\r\n            }\r\n          }\r\n        }`;\r\n\r\n        try {\r\n            const url = `${apiUrl}graphql?${query}`;\r\n            const res = await axios({\r\n            method: 'POST',\r\n            url,\r\n            headers: {'Content-Type': 'application/graphql'}\r\n            });\r\n            console.log('getting data');\r\n            if(res.data.data.details) {\r\n              setBlockDetailsData(res.data.data.details);\r\n\r\n              setLoading(false);\r\n            } else {\r\n              setLoading(false);\r\n              console.log('no block details found');\r\n            }\r\n          } catch(e) {\r\n            setError(e.message);\r\n            console.log(e.message);\r\n            setLoading(false);\r\n          }\r\n    };\r\n\r\n    const fetchData = async() => {\r\n      setLoading(true);\r\n      const query = `query={\r\n                      blocks{\r\n                        hash,\r\n                        block_index,\r\n                        height,\r\n                        time\r\n                      }\r\n                    }`;\r\n      const url = `${apiUrl}graphql?${query}`;\r\n      try{\r\n          const res = await axios({\r\n            method: 'POST',\r\n            url,\r\n            headers: {'Content-Type': 'application/graphql'}\r\n          });\r\n          const { blocks } = res.data.data;\r\n          if(blocks) {\r\n              const cloned = [...blocks];\r\n              const lowerLimit = ((page - 1) * pageSize);\r\n              const higherLimit = lowerLimit + pageSize - 1;\r\n              const clonedData = cloned.slice(lowerLimit, pageSize);\r\n              setPageData(clonedData);\r\n              setFetchedData(blocks);\r\n              let pages = Math.round(blocks.length / pageSize);\r\n              setTotalPages(pages);      \r\n              console.log(page, pageSize, lowerLimit, higherLimit, pageData);\r\n\r\n              setLoading(false);\r\n            } else {\r\n              setLoading(false);\r\n              console.log('no blocks');\r\n            }\r\n          } catch(e) {\r\n            setError(e.message);\r\n            console.log(e.message);\r\n            setLoading(false);\r\n          }\r\n        };\r\n\r\n    useEffect(() => {\r\n          fetchData();\r\n\r\n        return () => console.log('cleanup Board.js(1)')\r\n      }, []);\r\n      \r\n      useEffect(() => {\r\n        if(fetchedData) {\r\n          const cloned = [...fetchedData];\r\n          const lowerLimit = ((page - 1) * pageSize);\r\n          const higherLimit = lowerLimit + pageSize - 1;\r\n          const clonedData = cloned.splice(lowerLimit, pageSize);\r\n          setPageData(clonedData);\r\n          console.log(page, pageSize, lowerLimit, higherLimit, pageData);\r\n        }\r\n        return () => console.log('cleanup Board.js(2)')\r\n    }, [page]);\r\n\r\n   return (\r\n     <div className='board'>\r\n          {!displayBlock ?\r\n             <Fragment>\r\n\r\n                  {!loading ? \r\n                      <Fragment>\r\n                        <Pagination\r\n                          page={page}\r\n                          totalPages={totalPages}\r\n                          handlePrevPage={() => handlePrevPage()}\r\n                          handleNextPage={() => handleNextPage()}\r\n                        /> \r\n                        {pageData.length ?\r\n                            <Fragment>\r\n                                <Row \r\n                                  hash='Hash'\r\n                                  time='Age'\r\n                                  block_index='Index'\r\n                                  height='Height'\r\n                                  rowClass='row-heading'\r\n                                  even={false}\r\n                                />\r\n                                {pageData.map((block:IBlock, idx:number) => (\r\n                                  <Row\r\n                                      key={idx}\r\n                                      hash={block.hash}\r\n                                      block_index={block.block_index}\r\n                                      height={block.height}\r\n                                      time={block.time}\r\n                                      even={idx % 2 === 0 ? true: false}\r\n                                      onClick={() => handleClick(block.hash)}\r\n                                  />\r\n                                ))}\r\n                            </Fragment>\r\n                            :\r\n                            <Fragment>\r\n                              <div className='no-repo'>\r\n                                No data available\r\n                              </div>\r\n                            </Fragment>\r\n                         }\r\n                      </Fragment>\r\n                          :\r\n                      <Fragment>\r\n                        <Loader \r\n                            type='ThreeDots'\r\n                            color='#00bfff'\r\n                            height={40} \r\n                            width={40} \r\n                        />\r\n                      </Fragment>\r\n                  }\r\n            </Fragment>\r\n          :\r\n          <Fragment>\r\n            {!loading ?\r\n              <Fragment>\r\n                \r\n                {blockDetailsData ?\r\n                <Detail\r\n                size={blockDetailsData?.size}\r\n                block_index={blockDetailsData?.block_index}\r\n                prev_block={blockDetailsData?.prev_block}\r\n                tx={blockDetailsData?.tx}\r\n                handleDisplay={handleDisplay}\r\n                />\r\n                :\r\n                <Fragment>\r\n                  <div className='no-repo'>\r\n                    No data available\r\n                    <p \r\n                      className='refresh' \r\n                      onClick={() => setDisplayBlock(false)}>\r\n                        Go Back\r\n                    </p>\r\n                  </div>\r\n                </Fragment>}\r\n              </Fragment>\r\n            :\r\n            <>\r\n               <Loader \r\n                type='ThreeDots'\r\n                color='#00bfff'\r\n                height={40} \r\n                width={40} \r\n              />\r\n            </>}\r\n          </Fragment>\r\n        }\r\n      </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Header from './components/header/Header';\r\nimport Footer from './components/footer/Footer';\r\nimport Board from './components/board/Board';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Board />\r\n      <Footer />\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}